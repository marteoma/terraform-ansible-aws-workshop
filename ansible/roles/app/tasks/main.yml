---
# tasks file for app

- name: Download nodejs repo installer
  get_url: url=https://rpm.nodesource.com/setup_13.x dest=/tmp/nodejs-repo-installer.sh

- name: Change nodejs repo installer permissions
  file:
    path: /tmp/nodejs-repo-installer.sh
    mode: u=rwx,g=r,o=r

- name: Execute the nodejs repo installer
  shell: /tmp/nodejs-repo-installer.sh

- name: Remove the nodejs repo installer
  file: path=/tmp/nodejs-repo-installer.sh state=absent

- name: Installing mysql community release repository
  yum:
    name:
      - https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
    use_backend: yum

- name: Installing nodejs and mysql-client
  yum:
    name:
      - gcc-c++ 
      - make
      - nodejs
      - mysql-community-client
      - git
    use_backend: yum

- name: Install pm2 globally
  shell: sudo npm -g install pm2

- name: Set some variable
  set_fact:
    release_path: "{{ project_path }}/releases/{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
    current_path: "{{ project_path }}/current"

# - name: Adding the path in the Profile files
#   lineinfile: dest=/root/.bash_profile line='export RDS_ENDPOINT={{ rds_endpoint }}' insertafter='EOF' regexp='export RDS_ENDPOINT={{ rds_endpoint }}' state=present
 
# - name: Source the bash_profile file
#   shell: source /root/.bash_profile

- name: Create project path directory if it does not exist
  file:
    path: '{{ project_path }}'
    state: directory
    mode: '0755'

- name: Retrieve current release folder
  command: readlink -f current
  register: current_release_path
  ignore_errors: yes    
  args:
    chdir: "{{ project_path }}"

- name: Create new release folder
  file:
    dest: '{{ release_path }}'
    mode: '0755'
    recurse: yes
    state: directory

- name: Clone Node JS MySQL Application repository
  git:
    repo: https://github.com/williammunozr/nodejs_catsndogs.git
    dest: "{{ release_path }}"

- name: Update npm
  npm:
    path: '{{ release_path }}'

- name: Update symlink
  file:
    src: '{{ release_path }}'
    dest: '{{ current_path }}'
    state: link

- name: Delete old pm2 process
  command: pm2 delete node-app
  ignore_errors: yes

- name: Start pm2
  command: pm2 start {{ current_path }}/src/app.js --name node-app -- {{ rds_endpoint }}

- name: Delete old dir
  shell: rm -rf {{ current_release_path.stdout }}/
  when: current_release_path.stdout != current_path