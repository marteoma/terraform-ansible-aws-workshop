version: 2.1

terraform: &terraform
  working_directory: ~/repo
  docker:
    - image: hashicorp/terraform:0.12.21
  environment:
    TF_IN_AUTOMATION: true
    TF_VAR_AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    TF_VAR_AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    TF_VAR_AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

ansible: &ansible
  working_directory: ~/repo
  docker:
    - image: circleci/python:3.8.2

jobs:
  init:
    <<: *terraform
    steps:
      - checkout
      - run: 
          name: init
          command: terraform init
      - persist_to_workspace:
          root: ~/repo
          paths: .
  plan:
    <<: *terraform   
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: ssh-keygen
          command: |
            ssh-keygen -t rsa -b 4096 -N '' -f ~/.ssh/ansible_aws
            cp -p ~/.ssh/ansible_aws.pub .
      - run:
          name: plan
          command: terraform plan
      - store_artifacts:
          path: ~/repo/tfplan
          destination: tfplan
      - persist_to_workspace:
          root: ~/repo
          paths: .          
  apply:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: apply
          command: terraform apply -auto-approve 
      - run:
          name: show
          command: terraform show -no-color > tfresult
      - store_artifacts:
          path: ~/repo/tfresult
          destination: tfresult  
  ansible_deployment:
    <<: *ansible
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: ansible deployment
          command: |
            pip install ansible
            wget https://releases.hashicorp.com/terraform/0.12.21/terraform_0.12.21_linux_amd64.zip
            unzip terraform_0.12.21_linux_amd64.zip
            ./terraform output db_instance_address
            ansible-playbook -i ansible/ec2.py ansible/app.yml --user ec2-user -e db_endpoint=$(./terraform output db_instance_address)
  destroy_app:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: destroy app
          command: terraform destroy -auto-approve
workflows:
  version: 2
  build_deploy:
    jobs:
      - init
      - plan:
          requires:
            - init
      - apply:
          requires:
            - plan
          filters:
            branches:
              only: 
                - master
      - ansible_deployment:
          requires:
            - apply
          filters:
            branches:
              only:
                - master
      - destroy_app:
          filters:
            branches:
              only:
                - destroy